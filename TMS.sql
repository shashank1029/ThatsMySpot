CREATE EXTENSION postgis;
SELECT postgis_full_version(); 

CREATE TABLE TMS.PARKINGSIGNSSTATUS(
	ID INT PRIMARY KEY NOT NULL,
	AVAILABLE_SPOTS INT NOT NULL,
	TOTAL_SPOTS INT NOT NULL
);

ALTER TABLE TMS.PARKINGSIGNSTATUS
ADD COLUMN LASTUPDATED timestamptz;

CREATE TABLE TMS.PARKINGSIGNSSTATUSHISTORY(
	ID bigserial PRIMARY KEY NOT NULL,
	PARKINGSIGNID INT NOT NULL,
	TOTAL_SPOTS INT NOT NULL,
	UPDATETIME timestamptz NOT NULL
);

ALTER TABLE TMS.PARKINGSIGNSTATUS
ADD COLUMN LASTUPDATED timestamptz;


CREATE TABLE TMS.PARKINGSIGNS(
	ID INT PRIMARY KEY NOT NULL,
	BOROUGH CHAR(1),
	ORDERNUM VARCHAR(10),
	SEQNUM INT,
	SIGNCODE VARCHAR(15),
	DISTANCE INT,
	SIGNFACING VARCHAR(4),
	ARROWPOINTS VARCHAR(4),
	XCOORD DOUBLE PRECISION,
	YCOORD DOUBLE PRECISION,
	SIGNDESC TEXT,
	LAT DOUBLE PRECISION,
	LON DOUBLE PRECISION,
	MAINSTREET TEXT,
	FROMSTREET TEXT,
	TOSTREET TEXT,
	SIGNSTREETSIDE CHAR(1)
);

CREATE TABLE TMS.CONDENSEPARKSIGNS(
	ID INT PRIMARY KEY NOT NULL,
	BOROUGH CHAR(1),
	ORDERNUM VARCHAR(10),
	SEQNUM INT,
	SIGNCODE VARCHAR(15),
	DISTANCE INT,
	SIGNFACING VARCHAR(4),
	ARROWPOINTS VARCHAR(4),
	XCOORD DOUBLE PRECISION,
	YCOORD DOUBLE PRECISION,
	SIGNDESC TEXT[],
	LAT DOUBLE PRECISION,
	LON DOUBLE PRECISION,
	MAINSTREET TEXT,
	FROMSTREET TEXT,
	TOSTREET TEXT,
	SIGNSTREETSIDE CHAR(1),
	CANPARK BOOLEAN,
	TOTALSPOTS INT,
	AVAILABLESPOTS INT
);

#INCREMENT/DECREMENT VALUE OF COLUMN WITHOUT FETCHING IT TEST
CREATE TABLE TMS.TEST(
	ID SERIAL PRIMARY KEY,
	COUNT INT
	MAX INT
);


INSERT INTO TMS.TEST(COUNT, MAX) VALUES (1,2);

SELECT * FROM TMS.TEST;

#INCREMENT VALUE TEST TILL ITS EQUAL TO SPECIFIED MAX
UPDATE TMS.TEST SET COUNT=COUNT+1 WHERE ID=3 AND COUNT<MAX;#IT WORKS!

#DECREMENT VALUE OF COUNT TILL IT IS ZERO
UPDATE TMS.TEST SET COUNT=COUNT-1 WHERE ID=1 AND COUNT>0; #IT WORKS!
insert into tms.test (count) values (select count from tms.test where id=3);

CREATE TABLE TMS.USERSTATUS(
	ID SERIAL PRIMARY KEY,
	USERNAME VARCHAR(15),
	PARKINGID INT,
	USERLAT DOUBLE PRECISION,
	USERLON DOUBLE PRECISION,
	PARKTIME timestamptz,
	RELEASETIME timestamptz,
	BOROUGH CHAR(1)
);  

ALTER TABLE TMS.USERSTATUS 
ADD CONSTRAINT PARKINGSGNID_fk 
FOREIGN KEY (PARKINGID) 
REFERENCES TMS.CONDENSEPARKSIGNS;

	
CREATE TABLE TMS.SEARCHHISTORY(
	ID BIGSERIAL PRIMARY KEY NOT NULL,
	USERNAME VARCHAR(15),
	USERLAT DOUBLE PRECISION,
	USERLON DOUBLE PRECISION,
	SEARCHTIME timestamptz NOT NULL,
	ZIPCODE INT,
	BOROUGH CHAR(1),
	RESULTPARKSIGNS INT[]
);

select sum(totalspots) from TMS.CONDENSEPARKSIGNS;